version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db
    networks:
      - microservices-network

  # Redis (for caching and pub/sub)
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - microservices-network

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/users?authSource=admin
      - JWT_SECRET=your-super-secret-jwt-key-here
      - JWT_EXPIRES_IN=7d
    depends_on:
      - mongodb
      - redis
    networks:
      - microservices-network
    volumes:
      - ./user-service:/app
      - /app/node_modules

  # Wallet Service
  wallet-service:
    build:
      context: ./wallet-service
      dockerfile: Dockerfile
    container_name: wallet-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/wallet?authSource=admin
    depends_on:
      - mongodb
      - redis
    networks:
      - microservices-network
    volumes:
      - ./wallet-service:/app
      - /app/node_modules

  # Catalog Service
  catalog-service:
    build:
      context: ./catalog-service
      dockerfile: Dockerfile
    container_name: catalog-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/catalog?authSource=admin
    depends_on:
      - mongodb
      - redis
    networks:
      - microservices-network
    volumes:
      - ./catalog-service:/app
      - /app/node_modules

  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/orders?authSource=admin
      - USER_SERVICE_HOST=user-service
      - USER_SERVICE_PORT=3001
      - CATALOG_SERVICE_HOST=catalog-service
      - CATALOG_SERVICE_PORT=3003
      - WALLET_SERVICE_HOST=wallet-service
      - WALLET_SERVICE_PORT=3002
    depends_on:
      - mongodb
      - redis
      - user-service
      - catalog-service
      - wallet-service
    networks:
      - microservices-network
    volumes:
      - ./order-service:/app
      - /app/node_modules

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - USER_SERVICE_HOST=user-service
      - USER_SERVICE_PORT=3001
      - WALLET_SERVICE_HOST=wallet-service
      - WALLET_SERVICE_PORT=3002
      - CATALOG_SERVICE_HOST=catalog-service
      - CATALOG_SERVICE_PORT=3003
      - ORDER_SERVICE_HOST=order-service
      - ORDER_SERVICE_PORT=3007
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
    depends_on:
      - user-service
      - wallet-service
      - catalog-service
      - order-service
    networks:
      - microservices-network
    volumes:
      - ./api-gateway:/app
      - /app/node_modules

volumes:
  mongodb_data:

networks:
  microservices-network:
    driver: bridge